#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "atmosphere/functions.sh"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 16) in;

//layout(location = 0) out vec3 delta_rayleigh;
//layout(location = 1) out vec3 delta_mie;
//layout(location = 2) out vec4 scattering;
//layout(location = 3) out vec3 single_mie_scattering;

layout (set = 3, binding = 0, rgba8) uniform image2DArray resultImage;

layout(push_constant) uniform PushConsts {
	layout (offset = 0) uint planetChunkIndex;
} pushConsts;

//uniform mat3 luminance_from_radiance;
//uniform sampler2D transmittance_texture;
//uniform int layer = 0;
void main() 
{
	vec3 delta_rayleigh;
	vec3 delta_mie;
	vec4 scattering;
	vec3 single_mie_scattering;
	AtmosphereParameters parameters = planetAtmosphereData[pushConsts.planetChunkIndex].atmosphereParameters;
    ComputeSingleScatteringTexture(
        parameters, TRANSMITTANCE_DICTION, vec3(gl_GlobalInvocationID.xyz) + vec3(0.5),
        delta_rayleigh, delta_mie);
    scattering = vec4(delta_rayleigh.rgb, delta_mie.r);
    single_mie_scattering = delta_mie;
	imageStore(resultImage, ivec3(gl_GlobalInvocationID.xyz), vec4(scattering));
}