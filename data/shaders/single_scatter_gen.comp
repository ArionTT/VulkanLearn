#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

#include "atmosphere/functions.sh"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 4) in;

layout (set = 3, binding = 0, rgba8) uniform image3D deltaRayleigh;
layout (set = 3, binding = 1, rgba8) uniform image3D deltaMie;
layout (set = 3, binding = 2, rgba8) uniform image3D singleScatter;

layout(push_constant) uniform PushConsts {
	layout (offset = 0) uint planetChunkIndex;
} pushConsts;

void main() 
{
	vec3 _deltaRayleigh;
	vec3 _deltaMie;
	vec4 _singleScatter;

	AtmosphereParameters parameters = planetAtmosphereData[pushConsts.planetChunkIndex].atmosphereParameters;
    ComputeSingleScatteringTexture(
        parameters, TRANSMITTANCE_DICTION[pushConsts.planetChunkIndex], vec3(gl_GlobalInvocationID.xyz) + vec3(0.5),
        _deltaRayleigh, _deltaMie);
    _singleScatter = vec4(_deltaRayleigh.rgb, _deltaMie.r);

	imageStore(deltaRayleigh,	ivec3(gl_GlobalInvocationID.xyz), vec4(_deltaRayleigh, 0));
	imageStore(deltaMie,		ivec3(gl_GlobalInvocationID.xyz), vec4(_deltaMie, 0));
	imageStore(singleScatter,	ivec3(gl_GlobalInvocationID.xyz), vec4(_singleScatter));
}